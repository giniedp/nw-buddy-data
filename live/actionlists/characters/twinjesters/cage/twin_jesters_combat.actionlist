<ActionList>
	<Actions>
		<Action Name="Combat_Run_Stop" FragmentName="Combat_Run_Stop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Combat_Run_Stop_CAGE_Task"/>
				<Not>
					<IfMannequinTag TagName="Clone"/>
				</Not>
				<Not>
					<IfMannequinTag TagName="WrongClone"/>
				</Not>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2666"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="0.0,0.0,0.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
		<Action Name="HorizontalSwipeHeavy" FragmentName="Horizontal_Swipe_Heavy" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="HorizontalSwipeHeavy_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="HorizontalSwipeOffset" FragmentName="Horizontal_Swipe_Offset" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="HorizontalSwipeOffset_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="HorizontalSwipeOffset_Variant" FragmentName="Horizontal_Swipe_Offset_Variant" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="HorizontalSwipeOffset_Variant_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="TwinDance_Front_Start" FragmentName="TwinDance_Front_Start" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="TwinDance_Front_Start_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<TriggerEntity>
					<Default TriggerName="TwinDanceCombo"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false" OnlyRemoveOneStack="false" RemoveNothingOnMigrate="false">
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_TwinJesters_TwinDanceHit_Checker"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="TwinDance_Front_Finale" FragmentName="TwinDance_Front_Finale" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="TwinDance_Front_Finale_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false" OnlyRemoveOneStack="false" RemoveNothingOnMigrate="false">
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_TwinJesters_TwinDanceHit_Checker"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="TwinDance_Back_Finale" FragmentName="TwinDance_Back_Finale" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="TwinDance_Back_Finale_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false" OnlyRemoveOneStack="false" RemoveNothingOnMigrate="false">
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_TwinJesters_TwinDanceHit_Checker"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="Fiery_Cackle" FragmentName="Fiery_Cackle" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Fiery_Cackle_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<TriggerEntity>
					<Default TriggerName="FCTelegraph"/>
				</TriggerEntity>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="HellRing" FragmentName="HellRing" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="HellRing_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="Teleport_Start" FragmentName="Teleport_Start">
			<ActivationCondition>
				<And>
					<IfBehaviorTreeTask ActionName="Teleport_Start_CAGE_Task"/>
					<Not>
						<IfMannequinTag TagName="Teleporting"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Teleport_Start_Voiced" FragmentName="Teleport_Start_Voiced">
			<ActivationCondition>
				<And>
					<IfBehaviorTreeTask ActionName="Teleport_Start_Voiced_CAGE_Task"/>
					<Not>
						<IfMannequinTag TagName="Teleporting"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Teleport_Loop" FragmentName="Teleport_Loop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Teleport_Loop_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="GoneInSmoke_Start" FragmentName="GoneInSmoke_Start">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GoneInSmoke_Start_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinTag TagName="Shadow"/>
					</IfCondition>
					<ThenActivity>
						<ModifyStatusEffects>
							<Default OnlyRemoveOwnedStatusEffects="false">
								<EffectsToApplyOnEnter>
									<EffectId EffectId="AI_TwinJesters_GoneInSmoke_Check_Shadow"/>
								</EffectsToApplyOnEnter>
							</Default>
						</ModifyStatusEffects>
					</ThenActivity>
					<ElseActivity>
						<ModifyStatusEffects>
							<Default OnlyRemoveOwnedStatusEffects="false">
								<EffectsToApplyOnEnter>
									<EffectId EffectId="AI_TwinJesters_GoneInSmoke_Check"/>
								</EffectsToApplyOnEnter>
							</Default>
						</ModifyStatusEffects>
					</ElseActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="GoneInSmoke_Start_OOB" FragmentName="GoneInSmoke_Start_OOB">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GoneInSmoke_Start_OOB_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinTag TagName="Shadow"/>
					</IfCondition>
					<ThenActivity>
						<ModifyStatusEffects>
							<Default OnlyRemoveOwnedStatusEffects="false">
								<EffectsToApplyOnEnter>
									<EffectId EffectId="AI_TwinJesters_GoneInSmoke_Check_Shadow"/>
								</EffectsToApplyOnEnter>
							</Default>
						</ModifyStatusEffects>
					</ThenActivity>
					<ElseActivity>
						<ModifyStatusEffects>
							<Default OnlyRemoveOwnedStatusEffects="false">
								<EffectsToApplyOnEnter>
									<EffectId EffectId="AI_TwinJesters_GoneInSmoke_Check"/>
								</EffectsToApplyOnEnter>
							</Default>
						</ModifyStatusEffects>
					</ElseActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="GoneInSmoke_Loop" FragmentName="GoneInSmoke_Loop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GoneInSmoke_Loop_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="GoneInSmoke_End" FragmentName="GoneInSmoke_End">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GoneInSmoke_End_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.3"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.5"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false">
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_TwinJesters_GoneInSmoke_Check"/>
						</EffectsToApplyOnEnter>
					</Default>
				</ModifyStatusEffects>
			</Activities>
		</Action>
		<Action Name="Interlude_Loop" FragmentName="Interlude_Loop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_Loop_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<Group>
					<ModifyStatusEffects>
						<Default OnlyRemoveOwnedStatusEffects="false">
							<EffectsToApplyOnEnter>
								<EffectId EffectId="AI_Enable_Stagger"/>
								<EffectId EffectId="AI_Stun_Immunity"/>
								<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
								<EffectId EffectId="AI_PalatineShield_Unflinching_Tenasity_Cleanse"/>
							</EffectsToApplyOnEnter>
						</Default>
					</ModifyStatusEffects>
					<ResetStamina ResetWhenReinstalled="false" IgnoreDataChanges="false">
						<Default OnEnter="Reset" OnExit="NoEffect"/>
					</ResetStamina>
				</Group>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinTag TagName="OOBReaction"/>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="OOBReaction" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="Interlude_Loop_Voiced" FragmentName="Interlude_Loop_Voiced">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_Loop_Voiced_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<Group>
					<ModifyStatusEffects>
						<Default OnlyRemoveOwnedStatusEffects="false">
							<EffectsToApplyOnEnter>
								<EffectId EffectId="AI_Enable_Stagger"/>
								<EffectId EffectId="AI_Stun_Immunity"/>
								<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
								<EffectId EffectId="AI_PalatineShield_Unflinching_Tenasity_Cleanse"/>
							</EffectsToApplyOnEnter>
						</Default>
					</ModifyStatusEffects>
					<ResetStamina ResetWhenReinstalled="false" IgnoreDataChanges="false">
						<Default OnEnter="Reset" OnExit="NoEffect"/>
					</ResetStamina>
				</Group>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinTag TagName="OOBReaction"/>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="OOBReaction" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="Interlude_End" FragmentName="Interlude_End">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_End_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerEntity>
				<TriggerRemoteEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerRemoteEntity>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Enable_Stagger"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
							<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
						</EffectsToRemoveOnExit>
						<EffectsToApplyOnExit>
							<EffectId EffectId="AI_Jester_Stamina_Clear"/>
						</EffectsToApplyOnExit>
					</Default>
				</ModifyStatusEffects>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Interlude_End_02" FragmentName="Interlude_End_02">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_End_02_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerEntity>
				<TriggerRemoteEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerRemoteEntity>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Enable_Stagger"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
							<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
						</EffectsToRemoveOnExit>
						<EffectsToApplyOnExit>
							<EffectId EffectId="AI_Jester_Stamina_Clear"/>
						</EffectsToApplyOnExit>
					</Default>
				</ModifyStatusEffects>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Interlude_End_03" FragmentName="Interlude_End_03">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_End_03_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerEntity>
				<TriggerRemoteEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerRemoteEntity>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Enable_Stagger"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
							<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
						</EffectsToRemoveOnExit>
						<EffectsToApplyOnExit>
							<EffectId EffectId="AI_Jester_Stamina_Clear"/>
						</EffectsToApplyOnExit>
					</Default>
				</ModifyStatusEffects>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Interlude_End_04" FragmentName="Interlude_End_04">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Interlude_End_04_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerEntity>
				<TriggerRemoteEntity>
					<Default TriggerName="End_Interlude"/>
				</TriggerRemoteEntity>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Enable_Stagger"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
							<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
						</EffectsToRemoveOnExit>
						<EffectsToApplyOnExit>
							<EffectId EffectId="AI_Jester_Stamina_Clear"/>
						</EffectsToApplyOnExit>
					</Default>
				</ModifyStatusEffects>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="GrandFinale_Loop" FragmentName="GrandFinale_Loop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GrandFinale_Loop_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false">
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_PalatineShield_Unflinching_Tenasity_Cleanse"/>
							<EffectId EffectId="AI_TwinJesters_Channeling"/>
						</EffectsToApplyOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_TwinJesters_Channeling"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinTag TagName="OOBReaction"/>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="OOBReaction" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="GrandFinale_End" FragmentName="GrandFinale_End">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="GrandFinale_End_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.3"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
					<Conditional Name="ChainAttack" InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_EnableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="SpotTheDifference_Start" FragmentName="SpotTheDifference_Start">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="SpotTheDifference_Start_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="SpotTheDifference_End_Win" FragmentName="SpotTheDifference_End_Win">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="SpotTheDifference_End_Win_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="SpotTheDifference_End_Lose" FragmentName="SpotTheDifference_End_Lose">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="SpotTheDifference_End_Lose_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="SpotTheDifference_Pose_1" FragmentName="SpotTheDifference_Pose_1">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="SpotTheDifference_Pose_1_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag>
					<Default TagName="OOBReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="SpotTheDifference_Loop" FragmentName="SpotTheDifference_Loop">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="SpotTheDifference_Loop_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
					<IfHasStatusEffect StatusEffect="AI_TwinJesters_WrongCloneID"/>
					<IfHasStatusEffect StatusEffect="AI_TwinJesters_RightCloneID"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="ActivateGrit" Comment="Activate GRIT as long as the character is not Staggered, and Stagger is not force disabled by MannequinMarker">
			<ActivationCondition>
				<And>
					<Not>
						<IfFragmentPlaying UseHostActionFragment="false" FragmentName="r_Stagger" Comment="Check that we're not already playing the Stagger reaction"/>
					</Not>
					<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					<Not>
						<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<Not>
						<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					</Not>
					<IfFragmentPlaying UseHostActionFragment="false" FragmentName="r_Stagger" Comment="Deactivate GRIT when the character is Staggered, so they do not continue to take stamina damage while in the state"/>
					<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<ActivateGrit Comment="This allows the character to always take Stamina damage">
					<Default OnEnter="Activate" OnExit="Deactivate" DamageTableRow=""/>
				</ActivateGrit>
			</Activities>
		</Action>
		<Action Name="Reaction_Staggered" FragmentName="r_Stagger" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfStaminaValue ComparisonValue="0.0" ComparisonValueIsPercentage="false" ComparisonType="LessThanOrEqual" Comment="Look for Stamina to be 0"/>
					<Or>
						<IfDamagedByPowerLevel Comparison="GreaterThanOrEqual" Value="0" FailOnNoReactionDamage="false" Comment="Require the character to be hit by an attack to enter Stagger"/>
						<IfHasStatusEffect StatusEffect="AI_Force_Stagger" Comment="Do not require the character to be hit by an attack to enter Stagger"/>
					</Or>
					<Not Comment="Check that the character isn't already stunned or staggered. Staggered also applies the 'Stunned' tag.">
						<Or>
							<IsStunned/>
							<IfMannequinTag TagName="Stunned"/>
							<IfHasStatusEffect StatusEffect="AI_Jester_Stamina_Clear" Comment="Make sure character won't get staggered when clearing the stamina"/>
						</Or>
					</Not>
					<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					<Not>
						<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Stunned" OnEnter="Set" OnExit="Unset" DelayTimer="0.0"/>
				</SetMannequinTag>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToApplyOnEnter>
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Enable_Stagger"/>
							<EffectId EffectId="AI_Stun_Immunity"/>
							<EffectId EffectId="AI_Jester_Interlude_Fortify"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<CastSpell>
					<Default SpellName="AI_Staggered_Telegraph"/>
				</CastSpell>
				<ChangeActionFragment ResetWhenReinstalled="true">
					<Default UseDefaultFragment="true" FragmentName=""/>
				</ChangeActionFragment>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/SpringboardEntitites/Characters/BaseAI/CAGE/EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Teleporting" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Interlude_DisplayHP" FragmentName="r_R0_L">
			<ActivationCondition>
				<And>
					<IfDamagedByPowerLevel Comparison="GreaterThanOrEqual" Value="0" FailOnNoReactionDamage="false" Comment="Require the character to be hit by an attack to enter Stagger"/>
					<Not Comment="Check that the character isn't already stunned or staggered. Staggered also applies the 'Stunned' tag.">
						<Or>
							<IsStunned/>
							<IfMannequinTag TagName="Stunned"/>
						</Or>
					</Not>
					<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					<Not>
						<IfHasStatusEffect StatusEffect="AI_Jester_Stagger_Check" ComparisonType="GreaterThanOrEqual" StackSize="1"/>
					</Not>
					<Not>
						<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfMannequinTag TagName="Stunned"/>
					<IfMannequinTag TagName="InterruptingReaction"/>
					<IfMannequinTag TagName="Teleporting"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<ModifyStatusEffects>
					<Default OnlyRemoveOwnedStatusEffects="false">
						<EffectsToApplyOnExit>
							<EffectId EffectId="AI_Jester_Stagger_Check"/>
						</EffectsToApplyOnExit>
					</Default>
				</ModifyStatusEffects>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<ClearDamaged/>
			</Activities>
		</Action>
		<Action Name="Reaction_PhaseChange_P1andAHalf" FragmentName="PhaseChange" ServerStarted="true">
			<ActivationCondition>
				<And>
					<And>
						<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.90"/>
						<Not>
							<IfMannequinTag TagName="TransitionDoneP1.5"/>
						</Not>
					</And>
					<Not>
						<IfMannequinTag TagName="Shadow"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Clone"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="WrongClone"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<ClearDamaged/>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.90"/>
							<IfHealthPercentage Comparison="GreaterThan" Percentage="0.70"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="TransitionDoneP1.5" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="InterruptingReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Reaction_PhaseChange_P1toP2" FragmentName="PhaseChange_P1toP2" ServerStarted="true">
			<ActivationCondition>
				<And>
					<And>
						<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.70"/>
						<Not>
							<IfMannequinTag TagName="TransitionDoneP2"/>
						</Not>
					</And>
					<Not>
						<IfMannequinTag TagName="Shadow"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Clone"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="WrongClone"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<ClearDamaged/>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.70"/>
							<IfHealthPercentage Comparison="GreaterThan" Percentage="0.30"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="TransitionDoneP2" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="InterruptingReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Reaction_PhaseChange_P2toP3" FragmentName="PhaseChange_P2toP3" ServerStarted="true">
			<ActivationCondition>
				<And>
					<And>
						<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.30"/>
						<Not>
							<IfMannequinTag TagName="TransitionDoneP3"/>
						</Not>
					</And>
					<Not>
						<IfMannequinTag TagName="Shadow"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Clone"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="WrongClone"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<ClearDamaged/>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.30"/>
							<IfHealthPercentage Comparison="GreaterThan" Percentage="0.10"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="TransitionDoneP3" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="InterruptingReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Reaction_PhaseChange_P3toP4" FragmentName="PhaseChange_P3toP4" ServerStarted="true">
			<ActivationCondition>
				<And>
					<And>
						<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.10"/>
						<Not>
							<IfMannequinTag TagName="TransitionDoneP4"/>
						</Not>
					</And>
					<Not>
						<IfMannequinTag TagName="Shadow"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Clone"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="WrongClone"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<ClearDamaged/>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.10"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="TransitionDoneP4" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="InterruptingReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Reaction_OOB" FragmentName="Combat_Run_Stop" ServerStarted="true">
			<ActivationCondition>
				<And>
					<Not>
						<IfHasStatusEffect StatusEffect="AI_Jester_Hall_Check" ComparisonType="GreaterThanOrEqual" StackSize="1"/>
					</Not>
					<Not>
						<IfHasStatusEffect StatusEffect="AI_Jester_Church_Check" ComparisonType="GreaterThanOrEqual" StackSize="1"/>
					</Not>
					<Not>
						<IfHasStatusEffect StatusEffect="AI_Jester_Tree_Check" ComparisonType="GreaterThanOrEqual" StackSize="1"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="OOBReaction"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Clone"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="WrongClone"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
					<IfMannequinTag TagName="OOBReaction"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<ClearDamaged/>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="0.0,0.0,0.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<ClearDamaged/>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_DisableStaffBackRight"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="DisableStaffBackRight"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<SetMannequinTag>
					<Default TagName="OOBReaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
			</Activities>
		</Action>
		<Action Name="Autodelivered_Surprise_Summon" FragmentName="Autodelivered_Surprise_Summon">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Autodelivered_Surprise_Summon_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_Manager"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="TriggerManager"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="OriginalPrankster" FragmentName="OriginalPrankster">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="OriginalPrankster_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Deploy"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Deploy_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Deploy_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Deploy_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Box_Delete_Sad"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="Delete_Trigger_Sad"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<TriggerEntity>
					<Default TriggerName="EnableNameplate"/>
				</TriggerEntity>
			</Activities>
		</Action>
		<Action Name="Intro_Idle" FragmentName="Intro_Idle">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Intro_Idle_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="Sheathe Weapon on command">
					<IfCondition>
						<IfMannequinMarker MarkerName="Sheathe"/>
					</IfCondition>
					<ThenActivity>
						<SheatheWeapon ResetWhenReinstalled="true">
							<Default SheatheOption="Sheathe" SlotToSheathe="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Set" OnExit="NoEffect"/>
						</SheatheWeapon>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="Unsheathe Weapon on command">
					<IfCondition>
						<IfMannequinMarker MarkerName="Unsheathe"/>
					</IfCondition>
					<ThenActivity>
						<SheatheWeapon ResetWhenReinstalled="true">
							<Default SheatheOption="UnSheathe" SlotToSheathe="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Set" OnExit="NoEffect"/>
						</SheatheWeapon>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_UnhideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="EnableNameplate"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Trigger_HideNameplate"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="HideMarker"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
	</Actions>
	<Conditions>
		<IfMannequinTag Name="ChainAttack" TagName="ChainAttack"/>
		<IfMannequinTag Name="StopChainAttack" TagName="StopChainAttack"/>
	</Conditions>
</ActionList>

